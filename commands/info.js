import bot from '../app.js';
import { selectUser, checkUser, formattedDate, countRefs } from '../db/quick_commands.js';

async function info(msg) {
    try {
      const thisBot = await bot.getMe();
      if (msg.text == '/info' || msg.text == `/info@${thisBot.username}`) {

        let user, from_user, date, formattedBalance, bank, formattedDick, count_refs;

        if (msg.reply_to_message) {

          await checkUser(msg, new Date());
          user = await selectUser(msg.reply_to_message.from.id);
          from_user = await selectUser(msg.from.id);
          date = await formattedDate(user.createdAt);
          formattedBalance = new Intl.NumberFormat('en-US').format(user.balance);
          bank = new Intl.NumberFormat('en-US').format(user.bank);
          formattedDick = new Intl.NumberFormat('en-US').format(user.dick_size);
          count_refs = await countRefs(user.user_id);
      
          if (await user.status == 'premium' && await from_user.status != 'premium') {
            await bot.sendMessage(msg.chat.id,
            `–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–ª–≥—è–¥–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ premium —Å—Ç–∞—Ç—É—Å–æ–º.`,
            {parse_mode: 'HTML', reply_to_message_id: msg.message_id});
            return;
          }       
        } else {

          await checkUser(msg, new Date());
          user = await selectUser(msg.from.id);
          date = await formattedDate(user.createdAt);
          formattedBalance = new Intl.NumberFormat('en-US').format(user.balance);
          bank = new Intl.NumberFormat('en-US').format(user.bank);
          formattedDick = new Intl.NumberFormat('en-US').format(user.dick_size);
          count_refs = await countRefs(msg.from.id);
        }
        
        await bot.sendMessage(msg.chat.id, 
          `üë§ –Ü–º'—è: ${user.first_name}\n` +
          `üë§ –ü—Ä—ñ–∑–≤–∏—â–µ: ${user.last_name}\n` +
          `üë§ Username: ${user.username}\n` +
          `–ë–∞–ª–∞–Ω—Å: ${formattedBalance}üíµ\n` +
          `üè¶ –ë–∞–Ω–∫: ${bank}\n` +
          `–î–æ–≤–∂–∏–Ω–∞ –ø–µ—Å—é–Ω–∞: ${formattedDick} —Å–º.üìè\n` +
          `–°—Ç–∞—Ç—É—Å: ${user.status}\n` +
          `–ó–∞–ø—Ä–æ—Å–∏–≤(–ª–∞): ${count_refs}üë§\n` +
          `üóì –£ –±–æ—Ç—ñ –∑: ${date}\n\n` +
          `<code>${user.user_id}</code>`,
          {parse_mode: 'HTML', reply_to_message_id: msg.message_id});
      }
    } catch (error) {
      console.log(`[${Date()}] ${error}`);
    }
}

export default info;